# Json Grammar
object   = "{" [property {"," property}] "}".
property = string ":" item.
item = number | bool | object | string | array.
bool = "true" | "false".
string = \" anything \"
array = "[" [item {"," item}] "]"

# Record Grammar
decodeable = "type" "alias" string "=" type
record = "{" [property {"," property}] "}"
property = string ":" type
type = "Int" | "String" | "Float" | list | record
list = "List" type


# Sample Output
testDecoder = Json.Decode.map3 (\x y z -> {prop1=x,prop2=y,otherProp=z})
    (Json.Decode.field "prop1" Json.Decode.string)
    (Json.Decode.field "prop2" Json.Decode.string)
    (Json.Decode.field "prop3" (Json.Decode.map2 (\x y -> {someProp=x,someOtherProp=y})
        (Json.Decode.field "someProp" Json.Decode.int)
        (Json.Decode.field "someOtherProp" Json.Decode.string)))


